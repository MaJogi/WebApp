@page
@using WebApp.Core
@using WebApp.Pages.Extensions
@model userSupportWebApp.Areas.SupportApp.Pages.Requests.IndexModel

@{
    Layout = "_Index";
    var page = "/SupportApp/Requests";
}

@section Create
{
    @Html.HypertextLinkFor(string.Empty, new Link(Constants.CreateNewLinkTitle, $"{page}/Create"))
}
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@Model.SearchString" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>
<button class="btn btn-secondary" onClick="window.location.reload();">Refresh Page</button>
<body>
    <div class="table-responsive">
        <table class="table">
            <thead>
                @Html.TableHeaderFor(
                    new Link(Html.DisplayNameFor(model => model.Items[0].Id), $"{page}?sortOrder={Model.CurrentSort}&currentFilter={Model.CurrentFilter}"),
                    new Link(Html.DisplayNameFor(model => model.Item.Description), $"{page}?sortOrder={Model.CurrentSort}&currentFilter={Model.CurrentFilter}"),
                    new Link(Html.DisplayNameFor(model => model.Item.EntryDate), Model.GetSortString(m => m.EntryDate, page)),
                    new Link(Html.DisplayNameFor(model => model.Item.DeadLine), Model.GetSortString(m => m.DeadLine, page))
                    )
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {
                    <tr id="@(item.ExpiringOrHasExpired ? "expiredColor" : "")">
                        @Html.TableRowFor(
                            page,
                            item.Id,
                            Html.DisplayFor(modelItem => item.Id),
                            Html.DisplayFor(modelItem => item.Description),
                            Html.DisplayFor(modelItem => item.EntryDate),
                            Html.DisplayFor(modelItem => item.DeadLine)
                            )
                    </tr>
                }
            </tbody>
        </table>
    </div>
</body>